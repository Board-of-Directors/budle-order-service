plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'ru.nsu.fit.directors'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.2")
}

dependencies {
	implementation 'org.flywaydb:flyway-core:9.10.2'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-actuator-autoconfigure:3.1.4'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.1'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.2'
    compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.modelmapper:modelmapper:3.1.1'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation 'org.springframework.kafka:spring-kafka'
	runtimeOnly 'com.netflix.eureka:eureka-client'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.zonky.test:embedded-database-spring-test:2.5.0'
    testImplementation 'org.flywaydb.flyway-test-extensions:flyway-spring-test:10.0.0'
    testImplementation 'org.flywaydb.flyway-test-extensions:flyway-dbunit-test:10.0.0'
    testImplementation 'org.dbunit:dbunit:2.7.0'
    testImplementation 'com.github.springtestdbunit:spring-test-dbunit:1.2.0'
}

springBoot {
	mainClass = "ru.nsu.fit.directors.orderservice.OrderServiceApplication"
}


dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
